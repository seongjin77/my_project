파싱: HTML이나 CSS, 자바스크립트로 작성된 텍스트 문서를 해석하는 과정.
렌더링: 작성된 문서를 파싱하여 브라우저에 시각적으로 출력하는 것을 말한다.

렌더링의 과정

브라우저가 서버에 렌더링에 필요한 파일을 요청(CSS, HTML, JavaScript 등)하고 응답받는다.
브라우저의 렌더링 엔진이 받아온 파일을 파싱하여 DOM객체 CSS 객체를 생성하고 이들을 결합하여 렌더 트리를 생성.
브라우저의 자바스크립트 엔진이 서버로 응답된 자바스크립트를 파싱하여 AST를 생성한다. 자바스크립트는 DOM API를 통해 DOM이나 CSS객체를 변경할 수 있다.
변경된 DOM과 CSS는 다시 렌더트리에 결합
렌더 트리를 기반으로 HTML 요소의 레이아웃을 계산하고 브라우저 화면에 HTML을 출력한다.

브라우저의 주소창의 URL이 서버의 IP 주소로 변환되어 해당 리소스를 요청한다.

HTTP: 웹에서 브라우저와 서버가 통신하기 위한 프로토콜(규약)
HTTP/1.1 은 하나의 요청과 응답만 처리 가능.
HTTP/2 는 다중 요청 처리 가능. 구버전에 비해 속도 빠름


HTML 파싱과 DOM 생성의 과정
HTML은 설계도 -> 브라우저는 공장 -> DOM 은 제품
브라우저는 서버에 파일을 요청-> 서버는 파일을 2진수로 전달-> 전달 받은 2진수를 mata 태그의 utf-8형식의 문자열로 변환.
문자열로 변환된 문서를 토큰 단위로 분해-> 각 토큰을 객체로 변환하여 노드로 생성.-> 토큰 내용에 따라 문서 노드, 요소 노드, 텍스트노드 등으로 나뉨
노드들은 DOM의 기본요소. 이런 노드들이 부자 관계를 형성하여 트리 자료구조를 구성. 이 노드들의 집합 트리 구조가 DOM이다.

CSS 파싱과 CSSOM 생성
css객체 생성 과정은 DOM 생성 과정과 동일. DOM 객체를 생성하다 CSS를 로드하는 태그를 만나면 DOM객체 생성 일시 중단. 실행컨텍스트 스택과 유사

이렇게 만들어진 DOM과 CSSOM으로 렌더 트리를 생성. 렌더 트리에는 화면에 렌더링 되는 노드만으로 구성.
자바스크립트의 경우 렌더링 엔진이 파싱하는도중 자바스크립트 파일을 만나면 자바스크립트 엔진에 제어권을 넘김.
자바스크립트 엔진은 자바스크립트 코드를 파싱하고 AST(추상적 구문 트리)를 생성. 이 AST를 기반으로 인터프리터가 실행할 수 있는 바이트 코드를 생성하여 실행.
자바스크립트 파싱 과정중에 DOM 생성이 중단되는 문제를 해결하기 위한 방법으로 async 어트리뷰트 / defer 어트리뷰트가 있다.
두 방법 모두 HTML 파싱과 자바스크립트의 로드가 비동기적으로 진행된다.