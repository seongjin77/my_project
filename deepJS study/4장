컴퓨터는 연산과 기억을 수행하는 부분이 나누어져 있다.
메모리는 데이터를 저장할 수 있는 메모리 셀의 집합체이다. 메모리 셀 하나에 1바이트(8비트)이며
컴퓨터는 메모리 셀의 크기(1바이트) 단위로 데이터를 저장하고 읽어 들인다.
각 셀은 고유의 메모리 주소를 갖는다.

코드가 실행될때마다 데이터의 값이 저장되는 메모리 주소가 랜덤하게 변하기 때문에 
기억하고 싶은 데이터를 재사용하기 위해 변수라는 메커니즘을 사용한다.
변수의 정의

변수는 하나의 값을 저장하기 위해 확보한 메모리 공간 자체 또는 그 메모리 공간을 식별하기 위해
붙인 이름을 말한다. 값의 위치를 가리키는 상징적인 이름.

변수는 기본적으로 하나의 값을 저장하기 위한 것이며, 배열과 객체같은 자료구조를 사용하면
관련 있는 어러 개의 값을 그룹화 해서 하나의 값처럼 사용 가능하다.

변수에 값을 저장하는 것을 할당이라 하고, 변수에 저장된 값을 읽어 들이는 것을 참조라 한다.

변수 이름을 식별자라고 한다. 어떤 값을 구별해서 식별할 수 있는 고유이름을 말한다.
이 식별자는 값이 아니라 값에 접근할 수 있는 메모리 주소를 기억하는 것이다.
이것은 변수에만 국한하지 않고 클래스,함수 , 변수 등의 이름을 모두 총칭한다.

var의 단점으로는 재선언, 재할당이 모두 가능하여 협업에 문제점을 야기할 수 있다.
따라서 var의 사용은 지양하는 편이 좋다.

변수

(변수를 선언한 이후 값을 할당하지 않으면 확보된 메모리 공간에 undefined라는 값이 할당되어
초기화된다. 초기화 되지 않으면 다른 애플리케이션이 사용했던 값이 남아 결과에 문제가 
생길 수 있기 때문이다.

변수 이름을 비롯한 모든 식별자는 실행 컨텍스트에 등록된다. (실행 컨텍스트)는 자바스크립트 엔진이
소스코드를 평가하고 실행하기 위해 필요한 환경을 제공, 실행결과를 관리하는 영역이다

(자바스크립트 코드는 인터프리터에 의해 한 줄씩 순차적으로 실행되므로 소스코드보다 밑에 있을때
참조에러가 뜰 것이라고 생각되어지지만 변수 선언은 소스코드가 순차적으로 실행되는 런타임 이전에
먼저 실행되기 때문에 소스코드의 위치와는 상관없이 참조가 가능하다. 변수 선언문이 코드의 맨 선두로
끌어 올려진 것처럼 동작하는 자바스크립트의 특징을 호이스팅이라 한다.
변수 선언뿐 아니라 var let 등과 같은 식별자는 모두 호이스팅 된다.)