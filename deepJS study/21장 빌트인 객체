자바스크립트 객체는 표준 빌트인 객체/ 호스트 객체 / 사용자 정의 객체로 크게 3가지로 나눌 수 있다.

표준 빌트인 객체 : 자바스크립트 실행환경과 상관없이 언제나 사용할 수 있다. Math, Reflect , JSON을 제외한 인스턴스를 생성할 수 있는 여러 생성자 함수 객체를 지원한다.
---
문자열, 숫자, 불리언 같은 원시값은 객체가 아니므로 프로퍼티나 메서드를 가질 수 없다. 하지만 객체처럼 동작하는 경우가 있다. 이것은 원시값을 객체처럼 사용할 경우 원시값으로 임시 객체를 생성하여 프로퍼티나 메서드를 사용하고 다시 원시값으로 되돌린다. 이러한 임시 객체를 래퍼 객체라 한다.

즉, 래퍼 객체는 원시값에 프로퍼티나 메서드를 일시적으로 사용하게 해주고 가비지 컬렉션의 대상이 되어 재사용이 불가능하다. 저장되는 객체가 아니라 일시적인 호출
문자열, 숫자, 불리언 심벌 이외의 null과 undefined는 래퍼 객체를 생성하지 않는다.
---
전역객체
전역 객체는 코드가 실행되기 전에 자바스크립트 엔진에 의해 가장 먼저 생성되는 객체이며 어떤 객체에도 속하지 않은 최상위 객체다.

전역객체는 개발자가 의도적으로 생성할 수 없다. 전역 객체를 생성할 수 있는 생성자 함수가 제공되지 않는다.
전역 객체의 프로퍼티를 참조할때 window(또는 global)를 생략할 수 있다.
전역객체는 Object.String, Number, Boolean등과 같은 모든 표준 빌트인 객체를 프로퍼티로 가지고 있다.
---
let이나 const 키워드로 선언한 전역변수는 전역 객체의 프로퍼티가 아니다. 전역 렉시컬 환경의 선언적 환경 레코드 내에 존재하게 된다.
var 키워드로 선언한 전역변수와 선언하지 않은 변수에 값을 할당한 암묵적 전역, 전역함수만이 전역객체의 프로퍼티가 된다.
---
script를 분리하여도 하나의 전역객체 window만을 공유한다. 즉 분리되어 있는 자바스크립트 코드가 하나의 전역을 공유하는 것이다.

---
빌트인 전역함수

eval함수 : 문자열을 전달받아 표현식일 경우 평가하여 값을 생성하고, 표현식이 아닌 문일 경우 문자열 코드를 런타임에 실행시킨다.
isFinite: 전달받은 인수가 유한수인지 , 무한수인지 확인하여 true, false를 반환한다.
이즈파이나이트
parseInt : 전달받은 문자열 인수를 정수로 해석하여 반환한다. 반환값은 기본적으로 10진수로 해석되어 반환되지만 2진수, 8진수와 같이 지정할 수 있음. 

암묵적 전역

선언하지 않은 식별자를 참조하는 경우 전역 변수로 선언된 것처럼 작동한다. 스코프 체인을 통해 식별자를 검색하는데 선언되지 않은 경우 자바스크립트 엔진이 전역객체의 프로퍼티로 생성하여 마치 전역 변수처럼 동작한다. 하지만 프로퍼티로 추가되었을뿐 실제는 변수로 등록되지 않아 전역 변수 호이스팅이 발생하지 않는다. 전역 변수로 등록된 변수는 delete 연산자를 통해 삭제가 불가능, 반면에 암묵적으로 생성된 프로퍼티는 delete를 통해 삭제 가능

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

원시값과 래퍼객체
문자열, 숫자, 불리언 같은 원시값은 객체가 아니므로 프로퍼티나 메서드를 가질 수 없다. 하지만 객체처럼 동작하는 경우가 있다. 이것은 원시값을 객체처럼 사용할 경우 원시값으로 임시 객체를 생성하여 프로퍼티나 메서드를 사용하고 다시 원시값으로 되돌린다. 이러한 임시 객체를 래퍼 객체라 한다.

즉, 래퍼 객체는 원시값에 프로퍼티나 메서드를 일시적으로 사용하게 해주고 가비지 컬렉션의 대상이 되어 재사용이 불가능하다. 저장되는 객체가 아니라 일시적인 호출
문자열, 숫자, 불리언 심벌 이외의 null과 nudefined는 래퍼 객체를 생성하지 않는다.

let이나 const 키워드로 선언한 전역변수는 전역 객체의 프로퍼티가 아니다. 전역 렉시컬 환경의 선언적 환경 레코드 내에 존재하게 된다.
var 키워드로 선언한 전역변수와 선언하지 않은 변수에 값을 할당한 암묵적 전역, 전역함수만이 전역객체의 프로퍼티가 된다.

빌트인 전역함수

eval함수 : 문자열을 전달받아 표현식일 경우 평가하여 값을 생성하고, 표현식이 아닌 문일 경우 문자열 코드를 런타임에 실행시킨다.
isFinite: 전달받은 인수가 유한수인지 , 무한수인지 확인하여 true, false를 반환한다.

parseInt : 전달받은 문자열 인수를 정수로 해석하여 반환한다. 반환값은 기본적으로 10진수로 해석되어 반환되지만 2진수, 8진수와 같이 지정할 수 있음. 

암묵적 전역

선언하지 않은 식별자를 참조하는 경우 전역 변수로 선언된 것처럼 작동한다. 스코프 체인을 통해 식별자를 검색하는데 선언되지 않은 경우 자바스크립트 엔진이 전역객체의 프로퍼티로 생성하여 마치 전역 변수처럼 동작한다. 하지만 프로퍼티로 추가되었을뿐 실제는 변수로 등록되지 않아 전역 변수 호이스팅이 발생하지 않는다. 전역 변수로 등록된 변수는 delete 연산자를 통해 삭제가 불가능, 반면에 암묵적으로 생성된 프로퍼티는 delete를 통해 삭제 가능
