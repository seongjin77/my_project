DOM은 HTML 문서의 계층적 구조와 정보를 표현하며 이를 제어하는 API를 제공하고 노드 객체들로 구성된 트리 자료구조다.

노드 타입: 문서 노드 / 요소 노드 / 어트리뷰트 노드 / 텍스트 노드

문서노드: DOM 트리의 최상위의 루트 노드로서 dococument 객체를 말한다. HTML 문서당 dococument 객체는 하나며 때문에 script가 분리되어도 하나의 전역객체를 공유한다. 이것을 막기 위해서 모듈 기능을 사용해서 스코프를 나누어준다.
요소 노드: HTML 요소를 나타낸다. (head / body 등등)
어트리뷰트 노드: 어트리뷰트 노드는 지정된 HTML 요소의 요소 노드와 연결되어 있다. 부모 노드가 없다.
텍스트 노드: HTML요소의 텍스트를 가리키는 객체. 요소 노드의 자식 노드이며 자식 노드를 가질 수 없는 리프 노드다.

노드 객체도 자바스크립트 객체이므로 프로토타입에 의한 상속 구조를 갖는다.
모든 노드 객체는 Object, EventTarget, Node 인터페이스를 상속받는다.
API를 상속받아 사용할 수도 있고 각 요소 노드마다 고유한 기능이 있다.

HTML 요소에 id 어트리뷰트를 부여하면 전역 변수가 암묵적으로 등록되고 노드 객체가 할당된다. id 값과 동일한 이름의 전역 변수가 선언되어 있는경우 전역 변수에 노드 객체는 할당되지 않는다. 즉, id값과 같은 이름의 전역변수가 없는 경우에만 노드 객체 할당.


잠깐, HTMLcollection와 NodeList 이란??
간단하게 설명하자면 둘 다 배열과 같이 각 항목을 접근하기 위한 인덱스를 제공한다고 한다. HTMLCollection의 항목은 name, id 속성으로도 접근이 가능하지만, NodeList의 항목은 인덱스 번호로만 접근이 가능하다.

만약 더 구체적인 엘리먼트를 선택하고 싶다면, querySelector그리고 querySelectorAll을 사용하자! (CSS문법을 사용가능)
하지만 위 둘에 비해 getElementByID가 더 빠르고 id어트리뷰트를 사용하는 경우엔 getElementByID를 쓰자

