자바스크립트 엔진은 함수를 어디서 호출했는지가 아니라 함수를 어디서 정의했는지에 따라 상위 스코프를 결정한다. 이를 렉시컬 스코프(정적 스코프)라 한다.

함수 코드 평가의 순서
함수 실행 컨텍스트 생성 / 함수 렉시컬 환경 생성 / 함수 환경 레코드 생성 / this바인딩 / 외부 렉시컬 환경에 대한 참조결정

렉시컬 환경의 '외부 렉시컬 환경에 대한 참조'에 저장할 참조값. 즉 상위 스코프에 대한 참조는 함수 정의가 평가되는 시점(=실행중인 실행 컨텍스트) 함수가 정의된 환경에 의해 결정된다.
요약하면 함수 정의 평가는 함수 코드 평가의 맨 마지막 순서에 일어나겠구나 생각함.(<틀린말임이거) 하지만 함수 정의 평가는 렉시컬 환경 생성 단계에서 일어나지 않나?

함수는 자신의 내부 슬롯 [Environment]에 상위 스코프의 참조를 저장한다.

중첩 함수가 정의되는 시점은 상위 함수가 실행되는 시점에 평가되고 함수 객체를 생성한다. 이때 함수 객체 내부 Environment에는 상위 함수의 실행컨텍스트의 렉시컬 환경의 참조가 저장되고 이게 상위 스코프다. 이 참조값은 자신이 삭제되지 않는한 계속 기억된다.

외부 함수보다 중첩함수가 오래 유지되는 경우, 중첩 함수는 이미 종료되어 실행컨텍스트 스택에서 삭제된 외부함수의 변수를 참조할 수 있다.
이러한 중첩함수를 클로저라 한다. 상위 함수의 렉시컬 환경을 중첩함수가 참조하고 있는 한 가비지 컬렉터의 대상이 되지 않는다. 독립적으로 존재할 수 있음.

상위함수의 스코프를 참조해야함 , 상위함수보다 생명 주기가 길어야 함. 이 두가지 조건을 만족하는 함수가 클로저
클로저가 참조하고 있는 상위스코프의 변수를 자유변수라 하며, 참조하지 않는 상위 스코프의 다른 식별자들은 기억하지 않는다.

함수가 평가되는 시점은?

전역 코드 평가 순서와
함수 코드 평가 순서 정리

함수 평가되는 시점 정리



