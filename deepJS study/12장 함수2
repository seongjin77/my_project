매개변수는 적을수록 좋으며 이상적인 함수도 최대한 한가지 기능만 수행하는 것이 좋다.
매개변수가 많은 경우에는 객체를 선언해 인수로 전달하는 것이 좋다. 이 경우에는 사용시 매개변수의 순서도 상관없고 인수의 의미를 설명하는 프로퍼티 키를 사용하기 때문에 코드의 가독성도 좋아진다.
하지만 함수 외부에서 함수 내부로 전달한 객체를 함수 내부에서 변경할 시 함수 외부의 객체도 변경되는 부수 효과가 있어 주의해야 한다.

반환문
리턴 키워드 뒤에 반환값으로 사용할 표현식을 지정하지 않으면 undefinde값이 반환된다.
리턴문은 생략 가능하며 반환값으로 사용할 표현식 사이에 줄바꿈이 있으면 세미콜론이 자동 추가되어 오류가 생길 수 있다.
반환문은 기본적으로 함수 내부에서만 사용할 수 있지만 Node.js에서는 모듈 시스템에 의해 파일별로 독립적인 파일 스코프를 갖는다. 때문에 노드.js 환경에서는 파일의 가장 바깥 영역에 반환문을 사용해도 에러가 나지 않는다.

매개변수도 인수의 타입에 따라서 값이 전달된다.

**원시 타입 인수을 매개변수로 전달할때는 원시 값은 변경 불가능한 값이라 재할당을 통해 새로운 원시값을 복사해 매개변수로 전달하는데, 객체는 변경 가능한 값이라 재할당을 따로 하지 않는다. 또한 참조값을 공유하기 때문에 함수 내부에서 객체의 값을 변경하면 원본의 객체의 값이 변경된다.

이런 문제점을 해결하기 위해 옵저버 패턴틀 사용하거나 객체를 원시 값처럼 변경 불가능한 값으로 동작하게 만드는 '불변 객체'로 만들어 사용하는 것이다. 재사용의 경우 깊은 복사를 통해 새로운 객체를 생성해 재할당하여 사용하는 것이 바람직하다. 비용은 더 들지만 부수효과를 막을 수 있기 때문이다.

즉시 실행 함수는 함수의 정의와 동시에 즉시 실행되며, 한 번만 호출 할 수 있는 함수이다.
반드시 그룹연산자()안에 써야하며 그룹연산자 안에는 값이 와야한다. 때문에 값으로 표현되는 함수 표현식으로 작동하기 때문에 익명함수를 일반적으로 사용한다.

재귀함수
재귀함수란 자기 자신을 호출하는 함수를 말한다. 재귀함수는 반복문 없이 구현할때 사용한다. 
주의점은 함수 이름은 함수 내부에서만 유효함으로 외부에서 함수를 호출할때는, 함수를 가리키는 식별자를 통해 호출해야한다. 또한 무한히 반복함으로 탈출 조건을 달아주어야 한다.

콜백함수
함수의 매개변수를 통해 다른 함수의 내부로 전달되는 함수를 콜백 함수라 하며, 이와 반대로 매개변수를 통해 함수의 외부에서 콜백 함수를 전달 받은 함수를 고차 함수라 한다. 중첩 함수처럼 콜백함수는 기존의 함수를 도와주는 역활을 하는데 다른점은 중첩함수는 고정되어 있어 변경이 쉽지 않지만 콜백함수는 수정을 통해 유동적으로 사용할 수 있는 장점이 있다.

콜백함수는 고차함수에 상속되어있는 개념이라 호출시도 고차함수에 의해 정해지고 인수 또한 마찬가지로 고차함수에 의해 전달되어 진다.


@@@@@@@@@@@@@

매개변수는 적을수록 좋으며 이상적인 함수는 최대한 한가지 기능만 수행하는 것이 좋다.
매개변수가 많은 경우에는 객체를 선언해 인수로 전달하는 것이 좋다. 이 경우에는 사용시 매개변수의 순서도 상관없고 인수의 의미를 설명하는 프로퍼티 키를 사용하기 때문에 코드의 가독성도 좋아진다.
하지만 함수 외부에서 함수 내부로 전달한 객체를 함수 내부에서 변경할 시 함수 외부의 객체도 변경되는 부수 효과가 있어 주의해야 한다.

매개변수도 인수의 타입에 따라서 값이 전달된다.

원시 타입 인수을 매개변수로 전달할때는 원시 값은 변경 불가능한 값이라 재할당을 통해 새로운 원시값을 복사해 매개변수로 전달하는데, 객체 타입 인수는 변경 가능한 값이라 재할당을 따로 하지 않는다. 또한 참조값을 공유하기 때문에 함수 내부에서 객체의 값을 변경하면 원본의 객체의 값이 변경된다.

이런 문제점을 해결하기 위해 옵저버 패턴틀 사용하거나 객체를 원시 값처럼 변경 불가능한 값으로 동작하게 만드는 '불변 객체'로 만들어 사용하는 것이다. 재사용의 경우 깊은 복사를 통해 새로운 객체를 생성해 재할당하여 사용하는 것이 바람직하다. 비용은 더 들지만 부수효과를 막을 수 있기 때문이다.

;즉시 실행 함수 안써봐서 처음 알았는데

즉시 실행 함수는 함수의 정의와 동시에 즉시 실행되며, 한 번만 호출 할 수 있는 함수이다.
반드시 그룹연산자()안에 써야하며 그룹연산자 안에는 값이 와야한다. 때문에 값으로 표현되는 함수 표현식으로 작동하기 때문에 익명함수를 일반적으로 사용한다.

;콜백함수도 


콜백함수
함수의 매개변수를 통해 다른 함수의 내부로 전달되는 함수를 콜백 함수라 하며, 이와 반대로 매개변수를 통해 함수의 외부에서 콜백 함수를 전달 받은 함수를 고차 함수라 한다. 중첩 함수처럼 콜백함수는 기존의 함수를 도와주는 역활을 하는데 다른점은 중첩함수는 고정되어 있어 변경이 쉽지 않지만 콜백함수는 수정을 통해 유동적으로 사용할 수 있는 장점이 있다.

콜백함수는 고차함수에 상속되어있는 개념이라 호출시도 고차함수에 의해 정해지고 인수 또한 마찬가지로 고차함수에 의해 전달되어 진다.

순수 함수와 비순수 함수
부수효과가 없는 함수를 순수 함수라 하고 부수효과가 있는 함수를 비순수 함수라 한다.

