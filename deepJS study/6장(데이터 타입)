자바스크립트의 모든 데이터 값은 원시타입과 객체 타입으로 구분된다.

원시 타입에는 숫자,문자열,불리언,undefined,null, 심벌 타입이 있고
객체 타입에는 객체,함수,배열 등이 있다.

C나 자바의 경우 정수와 실수를 구분해서 int, long, float, double 등과 같은 여러 숫자 타입이 있다
하지만 자바스크립트는 배정밀도 64비트 부동소수점 형식 즉,
하나의 숫자 타입만 존재하며 모든 수를 실수로 처리한다. 정수만 표현하는 
데이터 타입이 별도로 존재하지 않는다. 마찬가지로 자바스크립트는 2진수 8진수 등을 표현하기 위한
데이터 타입을 제공하지 않기 때문에 이를 참조하면 모두 10진수로 해석된다. 

숫자 타입은 추가적으로 3가지 특별한 값을 표현할 수 있다. 
Infinity
-Infinity
NAN: 산술 연산 불가 (not a number)

//////////
문자열 타입은 텍스트 데이터를 나타내는 데 사용한다. 0개 이상의 16비트 유니코드 문자의 집합으로
표현된다. 문자열은 '', "",`` 으로 텍스트를 감싸서 사용한다. 일반적으로는 ''선호

C는 문자열 타입을 제공하지 않고 문자의 배열로 문자열을 표현하고, 자바는 문자열을 객체로 표현한다
자바스크립트의 문자열을 말했다싶이 원시 타입이며 변경 불가능한 값이다. 한 번 생성되면 변경할 수 없다.

템플릿 리터럴은 ES6부터 도입된 새로운 문자열 표기법인데 백틱``을 사용해 표현한다. 
템플릿 리터럴은 멀티라인 문자열,표현식 삽입, 태그드 템플릿 등 편리한 문자열 처리 기능을 제공한다.
템플릿 리터럴은 런타임에 일반 문자열로 변환된다고 한다. 

일반적으로 문자열 내에서 줄바꿈등을 표현할 수 없다. 떄문에 /백슬래시로 시작하는
이스케이프 시퀀스를 사용해야한다. 개행문자는 라인피드와 캐리지 리턴이 있는데 자바스크립트에선
둘 다 똑같이 작동하고 보통 라인피드를 사용해 개행한다.

-멀티라인 문자열은 이스케이프 시퀀스를 사용하지 않고 줄바꿈이나 공백을 표현할 수 있다.

-문자열은 문자열 연산자 +를 사용해 연결 할 수 있다. 
피연산자 중 하나 이상이 문자열일 경우 문자열 연결 연산자로 동작하고
그 외의 경우엔 덧셈 연산자로 동작한다.

표현식 삽입은 ${}으로 표현식을 감싸주어 사용하는데 표현식의 평가 결과가 문자열이 아니라도
문자열로 타입을 변경하여 삽입할 수 있다. 반드시 템플릿 리터럴 백틱``안에서 사용해야한다.

불리언 타입은 ture와 false뿐이다. 따라서

undefined타입의 값은 undefinded뿐이다. 변수를 선언하고 메모리 공간을 확보했을때 빈 상태로
내버려두지 않고 undefined값으로 초기화 하여 할당한다. 

C언어와 같은 다른 프로그래밍 언어에서는 선언과 정의를 구분해서 사용하는데
선언은 컴파일러에게 식별자의 존재만 알리는 것이고, 정의는 실제로 컴파일러가 변수를 생성해서
식별자와 메모리 주소를 연결되었을때 정의를 말한다. 하지만 자바스크립트에서는 선언과 동시에
정의가 이뤄지기 때문에 구분을 나누기가 쉽지 않다. 

null타입의 값은 null이 유일하며 변수에 값이 없다는 것을 의도적으로 명시할때 사용한다. 
이것은 이전에 참조하던 값을 더 이상 참조 하지 않겠다는 의미이며 참조하지 않는 메모리 공간에
대해 자바스크립트 엔진은 가비지 콜렉션을 수행할 것이다.
함수가 유효한 값을 반환할 수 없는 경우 에러대신 null을 반환한다.

심벌타입
심벌은 변경 불가능한 원시 타입의 값으로 심벌 값은 다른 값과 중복되지 않는 유일한 값이다.
주로 이름이 충돌한 위험이 없는 객체의 유일한 프로퍼티 키를 만들기 위해 사용한다.
심벌은 symbol함수를 호출해 생성한다.








