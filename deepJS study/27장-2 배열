new Array(10) 이면 빈 요소 10개를 가지고 있는 배열 생성/ new Array() 빈배열 생성 / new Array(1,2,3) 요소가 2개 이상일시 인수를 요소로 갖는 배열생성

Array.of(a) a요소를 가지는 배열 생성. 인수가 1개이고 숫자여도 요소로 갖는 배열을 생성한다.
Array.from() : 유사 배열 객체를 변환하여 배열을 생성한다. 이터러블을 변환하여 배열을 생성한다.

유사배열 객체: 배열처럼 인덱스로 프로퍼티 값에 접근할 수 있고 length 프로퍼티를 갖는 객체를 말한다. 유사배열 객체는 for문으로 순회 가능.

배열은 객체임으로 인덱스로 말고 문자 프로퍼티를 추가할 수 있다. 이때 길이에 영향을 주지 않음.
배열 삭제시 delete연산자는 길이가 바뀌지 않으므로 splice 메서드를 사용하는 것이 좋다.

배열 메서드는 원본 배열을 수정하는 메서드와 원본 배열을 변경하지 않고 새로운 배열을 생성하여 반환하는 메서드로 나뉜다.

fill / join / reverse / splice // push , pop / unshift, shift :  원본배열 수정 / 인수가 배열일때 배열 그대로 전달. 
slice // concat : 원본 배열 유지 / 인수가 배열일때 해체해서 전달

후입선출(LIFO): 마지막에 넣은 데이터를 먼저 처리 / 스택
선입선출(FIFO): 먼저 들어온 데이터를 먼저 처리 / 큐

@@@@@@@@@@@@@@@@@@@@@ 배열 3번째

순수함수: 부수효과가 없는 함수. 부수효과란 함수 인자 외 다른 조건에 의해 값이 달라지는 상태. 즉 순수함수란 동일한 매개변수가 주어지면 항상 결과가 같아야 한다.

삼항연산자 중첩사용 가능.

배열 또한 객체임으로 this를 가리킬 수 있음.

forEach의 두번째 인자에 this로 사용할 객체를 전달할 수 있다. forEach(콜백함수,this);
일반 함수에서는 전역객체를, 메서드에서는 메서드를 호출한 객체를, 생성자 함수로 호출될때는 생성자 함수가 미래에 생성할 인스턴스를 가리킨다.
for문과 달리 break, continue 사용불가
희소 배열과 같이 존재하지 않는 요소는 순회대상에서 제외. map , filter , reduce도 마찬가지

map
forEach와 마찬가지로 배열의 모든 요소들을 순회하며 콜백함수의 인수로 전달하고, 인수로 전달받은 콜백함수의 반환값들로 구성된 새로운 배열을 반환한다.
forEach와 map의 차이점: forEach는 단순히 for문을 대체하기 위한 고차함수 / map은 요소값을 다른값으로 매핑한 새로운 배열을 생성하기 위한 고차함수.

filter
콜백함수의 반환값이 ture인 요소만 새로운 배열들로 반환한다.

reduce(콜백함수(누적값, 요소값, 현재인덱스, 호출한배열), 누적값의 초기값.)
객체의 특정 프로퍼티 값을 합산하는 경우 초기값 설정을 반드시 해야한다.












