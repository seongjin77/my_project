클래스 프로퍼티
constructor에 this에 인스턴스 프로퍼티를 추가한다.

--접근자 프로퍼티
접근자 프로퍼티는 자체적으로 값[[value]]를 갖지 않고 다른데이터 프로퍼티의 값을 읽거나 저장할 때 사용하는 접근자 함수, getter함수와 setter 함수로 구성되어 있다.
get 메서드는 프로퍼티 값을 읽어올때, set 메서드는 프로퍼티 값을 변경할때 사용. 사용시에는 호출이 아니라 참조하는 형식으로 사용.
set은 하나의 매개변수만 받을 수 있다.

클래스 필드
클래스 필드란 클래스가 생성할 인스턴스의 프로퍼티를 가리키는 용어다.
자바스크립트 클래스에서는 this를 반드시 사용하자.
클래스 필드 초기화 할 필요가 있다면 위해 constructor 안에 this로 초기화를 시켜주어야 한다.



@@@@@@@@@@@@@@@명성님 프로퍼티

constructor 내부에서 this에 추가한 프로퍼티는 언제나 클래스가 생성한 인스턴스의 프로퍼티가 된다.

클래스의 메서드는 기본적으로 프로토타입 메서드이기에 클래스의 접근자 프로퍼티 또한 인스턴스의 프로퍼티가 아닌 프로토타입의 프로퍼티이다.

클래스 필드(또는 멤버)는 클래스 기반 객체지향 언어에서 클래스가 생성할 인스턴스의 프로퍼티를 가리키는 용어다.
클래스 필드에 함수를 할당하면 프로토타입 메서드가 아닌 인스턴스의 메서드가 되기 때문에 권장하지 않는다.

클래스의 몸체 내부에서는 메서드만 선언할 수 있었지만 정식 표준 사양으로 승급이 확실시 되기에 최신 브라우저에서는 메서드가 아닌 클래스 필드를 정의하여도 문법 에러가 발생하지 않고 정상 동작한다.
클래스 몸체에서 클래스 필드를 정의하는 경우 this에 클래스 필드를 바인딩해서는 안된다. this는 클래스의 constructor와 메서드 내에서만 유효하기 떄문이다. 다만 클래스 필드를 참조할때에는 this를 사용하여 어떤 클래스 필드를 참조하는지 명시해야 한다.


@@@@@@
클래스 상속과 생성자 함수 상속의 차이
생성자 함수는 프로토타입 체인을 통해 다른 객체의 프로퍼티를 상속받는 것.
상속에 의한 클래스 확장은 기존 클래스를 상속받아 클래스를 추가로 확장해 나가는 것.
extends 키워드를 사용. 생성자 함수는 확장할 수 있는 문법 지원 x

상속을 통해 확장된 클래스를 서브클래스. 상위 클래스를 수퍼클래스 혹은 베이스 클래스라 부름. 이것의 프로토 타입들도 똑같이 상속관계에 놓인다.
클래스가 아닌 생성자 함수를 상속받아 확장할 수 있다. 즉 동적으로 상속을 결정할 수 있음.

차이점은 생성자 함수는 확장의 개념이 아님. 반대로 클래스는 있던 것에서 뻗어 나가는 것.- 450p

Super 키워드
super키워드는 함수처럼 호출할 수도 있고 this처럼 식별자 같이 사용할 수 있는 키워드이다.
super를 호출하면 수퍼클래스의 constructor를 호출한다.
super를 참조하면 수퍼클래스의 메서드를 호출 할 수 있다.

super를 호출할 때 주의사항
1. 서브클래스에서 constructor를 생략하지 않는 경우 서브클래스의 constructor에서는 반드시 super를 호출해야한다.
2. 서브클래스의 constructor에서 super를 호출하기 전에는 this를 참조할 수 없다.
3. super는 반드시 서브클래스의 constructor 안에서만 호출한다.

Super 참조
서브 클래스 메서드 내에서 super를 참조하면 수퍼클래스의 메서드를 호출 할 수 있다.
--459쪽부터 시작. 클래스 유튜브로 한 번 보기