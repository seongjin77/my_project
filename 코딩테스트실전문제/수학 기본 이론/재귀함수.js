function 재귀(n){
    console.log('재귀 호출', n);

    if(n===1) return;
    
    for(let i = 0; i<2; i++){
    
        재귀(n-1);

    console.log('재귀함수 밑 호출',n);


    }
    


}

재귀(5);

/* 
1.재귀(5) - 컨트롤러가 함수 호출문을 보고 함수 내부로 진입
2.외부 함수의 실행 컨텍스트 생성
3.지역변수,매개변수, 내부함수 실행 컨텍스트(렉시컬 스코프의 환경 레코드)에 등록
4. 1번 console.log 실행, (log를 부른 console을 window에서 찾아서 가져 옴)
5. if문은 true가 될때까지  무시
6. 재귀함수 재호출 (n-1) 진행.  외부 함수의 실행컨텍스트는 종료된 것이 아니라 남아 있으며, 계속 재호출 되면서 함수 실행 컨텍스트 생성하며 실행 컨텍스트 스택에 쌓이면서 console.log 실행 (5,4,3,2,1)
7. 재호출 부분이 모두 끝났더라도 각 실행 컨텍스트에는 재귀 함수의 아래 코드 `console.log('재귀함수 밑 호출',n)이 남아있기에 그 부분을 실행하고 후입 선출의 방식으로 실행컨텍스트가 종료(2,3,4,5)

반복문마다 실행컨텍스트가 새로 생성되고, 그리고 모든 실행컨텍스트는 종료되지 않은 채 n이 1이 될 동안 계속 생성됩니다,
이후 1이 되었을때 return이 되면서 함수가 종료되야하는데 재귀함수 밑에 있는 console.log는 실행하지 않았기에 그 부분을 다시 제일 나중에 실행 된 실행컨텍스트 (n이 1 값으로 들어간 재귀함수)부터 실행되면서 순차적으로 종료되네요 
그래서 5,4,3,2,1까지 출력한뒤에 , 이제 실행컨텍스트 스텍 최상단에 있는 재귀함수의 재귀함수 밑 호출이 실행되면서 2, 3, 4, 5 가 되고, 5를 출력하면서 외부 재귀함수가 종료되면서 실행컨텍스트 스텍에서 제거됩니다

*/